name: nvim

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  plenary:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        version: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Cache
        uses: actions/cache@v4
        with:
          path: .tests
          key: ${{ runner.os }}-nvim-${{ matrix.version }}-${{ hashFiles('spec/minimal_init.lua') }}-${{ hashFiles('spec/bootstrap.lua') }}
      - name: Neovim setup
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.version }}
      - name: Neovim version
        run: nvim --version
      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: tests/go/go.mod
          cache: false
      - name: Cache Go tools
        uses: actions/cache@v4
        with:
          path: |
            ~/go/bin
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-tools-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-tools-
      - name: Cache Windows build tools
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: |
            C:\ProgramData\chocolatey\lib
            C:\msys64
          key: ${{ runner.os }}-build-tools-${{ hashFiles('.github/workflows/nvim-plenary.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-tools-
      - name: Setup build tools (Windows)
        if: runner.os == 'Windows'
        run: |
          # Check if tools are already installed from cache
          if (!(Test-Path "C:\msys64\usr\bin\find.exe")) {
            # Install MinGW for tree-sitter compilation
            choco install mingw -y
            # Install MSYS2 which includes GNU find and other Unix tools
            choco install msys2 -y
          }
          # Add MSYS2 bin to PATH (this includes GNU find)
          echo "C:\msys64\usr\bin" >> $env:GITHUB_PATH
      - name: Verify build tools
        shell: bash
        run: |
          gcc --version
          node --version
          npm --version
      - name: Install tree-sitter-cli
        run: npm install -g tree-sitter-cli@latest
      - name: Verify tree-sitter-cli
        run: tree-sitter --version
      - name: Install gotestsum
        shell: bash
        run: |
          if ! command -v gotestsum &> /dev/null; then
            go install gotest.tools/gotestsum@latest
          else
            echo "gotestsum already installed"
          fi
      - name: gotestsum version
        run: gotestsum --version
      - name: "Debug: go list"
        shell: bash
        working-directory: tests/go
        run: |
          go list -f '{
          "Dir": {{printf "%q" .Dir}},
          "ImportPath": "{{.ImportPath}}",
          "Name": "{{.Name}}",
          "TestGoFiles": [{{range $i, $f := .TestGoFiles}}{{if ne $i 0}},{{end}}"{{$f}}"{{end}}],
          "XTestGoFiles": [{{range $i, $f := .XTestGoFiles}}{{if ne $i 0}},{{end}}"{{$f}}"{{end}}],
          "Module": { "GoMod": {{printf "%q" .Module.GoMod}} }
          }]' ./...
      - name: "Debug: go test"
        shell: bash
        working-directory: tests/go
        run: go test -v -json ./... || true
      - name: Install Task
        uses: go-task/setup-task@v1
      - name: Run tests
        shell: bash
        run: task test-plenary

